@model Result

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Routing</title>
    <link asp-href-include="lib/bootstrap/css/*.min.css" rel="stylesheet" />
</head>
<body class="m-1 p-1">
    <table class="table table-bordered table-striped table-sm">
        <tr>
            <th>Controller:</th>
            <td>@Model.Controller</td>
        </tr>
        <tr>
            <th>Action:</th>
            <td>@Model.Action</td>
        </tr>
        @foreach (var key in Model.data.Keys)
        {
            <tr>
                <th>Key:</th>
                <td>@Model.data[key]</td>
            </tr>
        }
    </table>
    <a asp-action="CustomVariable">This is an outgoing URL.</a>
    <a asp-controller="Admin" asp-action="Index">
        This targets another controller
    </a>
    <a asp-controller="Home" asp-action="Index" asp-route-id="Hello">
        This is another outgoing URL with parameter
    </a>
    <a asp-controller="Home" asp-action="Index" asp-route-id="Hello" asp-protocol="https" asp-host="google.com" asp-fragment="test">
        Fully qualified URL
    </a>
    <a asp-route="out">
        Url using specific route
    </a>
    <br /><br />
    <p>
        Generating URLs: @Url.Action("CustomVariable", "Home", new { id = 100})
    </p>
    <hr />
    <a asp-route-legacyurl="/articles/windows_3.1_Overview.html" class="btn btn-primary">
        This is an outgoing URL using custom routes
    </a>
    <p>
        URL using custom routes: @Url.Action(null, null, new { legacyUrl = "/articles/windows_3.1_Overview.html" });
    </p>
</body>
</html>
